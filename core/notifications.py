from datetime import datetime
from aiogram import Bot
from typing import Dict, List
from core.models import User, Student, Teacher, Group, Discipline
from RequestsUrl import service

async def send_schedule_updates(bot: Bot, changes: Dict, date: datetime):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏"""
    if not any(changes.values()):
        return
    
    date_str = date.strftime("%Y-%m-%d")
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞–º
    affected_groups = set()
    for change_type in changes.values():
        for change in change_type:
            affected_groups.add(change['group'])
    
    for group_name in affected_groups:
        group = await Group.aio_get_or_none(name=group_name)
        if not group:
            continue
            
        students = await Student.aio_filter(group_id=group)
        for student in students:
            user = await User.aio_get(id=student.user_id)
            if not user:
                continue
                
            message = f"üîî –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ {date_str} –¥–ª—è –≥—Ä—É–ø–ø—ã {group_name}:\n"
            
            if changes['new_lessons']:
                message += "\nüìå –ù–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è:\n"
                for lesson in [l for l in changes['new_lessons'] if l['group'] == group_name]:
                    message += f"{lesson['pair']}) {lesson['discipline']} ({lesson['auditory']})\n"
            
            if changes['updated_lessons']:
                message += "\nüîÑ –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è:\n"
                for lesson in [l['new'] for l in changes['updated_lessons'] if l['new']['group'] == group_name]:
                    old = next(l['old'] for l in changes['updated_lessons'] 
                             if l['new']['group'] == group_name and l['new']['pair'] == lesson['pair'])
                    message += (f"{lesson['pair']}) {old['discipline']} ({old['auditory']}) ‚Üí "
                              f"{lesson['discipline']} ({lesson['auditory']})\n")
            
            if changes['deleted_lessons']:
                message += "\n‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è:\n"
                for lesson in [l for l in changes['deleted_lessons'] if l['group'] == group_name]:
                    message += f"{lesson['pair']}) {lesson['discipline']} ({lesson['auditory']})\n"
            
            try:
                await bot.send_message(user.chat_id, message)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç—É {user.chat_id}: {e}")
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º
    affected_disciplines = set()
    for change_type in changes.values():
        for change in change_type:
            affected_disciplines.add(change['discipline'])
    
    for discipline_name in affected_disciplines:
        discipline = await Discipline.aio_get_or_none(name=discipline_name)
        if not discipline:
            continue
            
        teachers = await Teacher.aio_filter(discipline_id=discipline)
        for teacher in teachers:
            user = await User.aio_get(id=teacher.user_id)
            if not user:
                continue
                
            message = f"üîî –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ {date_str} –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ {discipline_name}:\n"
            
            if changes['new_lessons']:
                message += "\nüìå –ù–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è:\n"
                for lesson in [l for l in changes['new_lessons'] if l['discipline'] == discipline_name]:
                    message += f"{lesson['pair']}) –ì—Ä—É–ø–ø–∞ {lesson['group']} ({lesson['auditory']})\n"
            
            if changes['updated_lessons']:
                message += "\nüîÑ –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è:\n"
                for lesson in [l['new'] for l in changes['updated_lessons'] if l['new']['discipline'] == discipline_name]:
                    old = next(l['old'] for l in changes['updated_lessons'] 
                             if l['new']['discipline'] == discipline_name and l['new']['pair'] == lesson['pair'])
                    message += (f"{lesson['pair']}) –ì—Ä—É–ø–ø–∞ {lesson['group']}: "
                              f"{old['discipline']} ({old['auditory']}) ‚Üí "
                              f"{lesson['discipline']} ({lesson['auditory']})\n")
            
            if changes['deleted_lessons']:
                message += "\n‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è:\n"
                for lesson in [l for l in changes['deleted_lessons'] if l['discipline'] == discipline_name]:
                    message += f"{lesson['pair']}) –ì—Ä—É–ø–ø–∞ {lesson['group']} ({lesson['auditory']})\n"
            
            try:
                await bot.send_message(user.chat_id, message)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é {user.chat_id}: {e}")